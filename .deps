#!/usr/bin/env bash

###############################################################################
# HomeBrew
###############################################################################

# Install Homebrew if not found
if [[ -z $(command -v brew) ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Make sure we’re using the latest Homebrew
brew update

# Upgrade any already-installed formulae
brew upgrade

# Install GNU core utilities (those that come with OS X are outdated)
# Don’t forget to add `$(brew --prefix coreutils)/libexec/gnubin` to `$PATH`.
brew install coreutils
# Install some other useful utilities like `sponge`.
brew install moreutils
# Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
brew install findutils
# Install GNU `sed`, overwriting the built-in `sed`.
brew install gnu-sed --with-default-names
# Install Bash 4.
# Note: don’t forget to add `/usr/local/bin/bash` to `/etc/shells` before
# running `chsh`.
brew install bash
brew install bash-completion2

# Switch to using brew-installed bash as default shell
if ! fgrep -q '/usr/local/bin/bash' /etc/shells; then
  echo '/usr/local/bin/bash' | sudo tee -a /etc/shells;
  chsh -s /usr/local/bin/bash;
fi;

# Install wget with IRI support
brew install wget

# Unstakk GnuPG to enable PGP-signing commits
brew install gnupg

# Install more recent versions of some OS X tools
brew install vim --with-override-system-vi
brew install grep
brew install openssh
brew install screen
brew install php

# Install Mono
brew install mono

# Install other useful binaries
brew install ack
brew install blueutil
brew install dos2unix
brew install ffmpeg
brew install git
brew install imagemagick
brew install mercurial
brew install macvim
brew install mas
brew install phantomjs
brew install rbenv
brew install subversion
brew install sqlite
brew install tree

# Install native apps
brew tap homebrew/cask-fonts
brew tap homebrew/cask-versions

function installcask() {
	brew cask install "${@}" 2> /dev/null
}

# quicklook plugins
installcask qlcolorcode    # syntax highlighting for code files
installcask qlstephen      # display text files with unknown or no extension, like CHANGELOG
installcask qlmarkdown     # display markdown
installcask quicklook-json # display json files with highlighting

# browsers
installcask chromium
installcask firefox
installcask google-chrome
installcask google-chrome-canary
installcask opera
installcask tor-browser

# devtools
installcask atom
installcask cyberduck
installcask dotnet-sdk
installcask livereload
installcask mysqlworkbench
installcask sourcetree
installcask visual-studio
installcask visual-studio-code

# other
installcask adobe-creative-cloud
installcask dropbox
installcask keka
installcask parallels
installcask skype
installcask spotify

# fonts
installcask font-source-code-pro
installcask font-hack-nerd-font

# Remove outdated versions from the cellar
brew cask cleanup
brew cleanup

###############################################################################
# Jasnus / macvim                                                             #
###############################################################################

# Install Janus for vim
if [[ -n $(command -v vim) ]] && [[ ! -d ~/.vim/janus ]]; then
  curl -Lo- https://bit.ly/janus-bootstrap | bash
fi

###############################################################################
# NVM (Node Version Manager - https://github.com/creationix/nvm)              #
###############################################################################

# Install NVM if not found
if [[ ! -s ~/.nvm/nvm.sh ]]; then
  git clone https://github.com/creationix/nvm.git ~/.nvm && cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`
  . ~/.nvm/nvm.sh
  nvm install stable
fi

#npm install -g azure-cli
#npm install -g bower
#npm install -g grunt-cli
npm install -g gulp
npm install -g mocha
npm install -g yo

# Yo Generators
#npm install -g generator-aspnet

###############################################################################
# Composer / laravel valet / WordPress / Roots                                #
###############################################################################

brew install composer
composer global require laravel/valet
[[ -s $HOME/.composer/vendor/bin ]] && export PATH=$PATH:$HOME/.composer/vendor/bin
valet install
brew install mariadb
brew services start mariadb
brew install wp-cli
php -d memory_limit=768M "$(which wp)" package install aaemnnosttv/wp-cli-valet-command

